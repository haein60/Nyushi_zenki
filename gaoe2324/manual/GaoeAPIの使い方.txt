=============================
GaoeAPIの使い方
=============================

　GaoEncodeはオートメーションサーバーを搭載しています。
　Windows Scripting HostやVisual BasicなどからGaoEncodeの一部機能を
　利用できます。これによって作業の自動化ができます。

  注：現バージョンでは、処理中にエラーが出るとMsgBoxが出て処理が中断
  　　されることがあります。

○インストール
　GaoeAPI_Install.batを実行してください。
　GaoeAPIを利用するにはレジストリにGaoEncodeを登録する必要があります。

  注：古いバージョン(GaoEncode 2.3.1.1）のGaoeAPIをインストールしている場合は、
      新バージョンのGaoeAPIをインストールする前に古いバージョンのGaoeAPIを
      アンインストールしてください。

○アンインストール
　GaoeAPI_UnInstall.batを実行してください。
　GaoeAPIの情報がレジストリから削除されます。

○サンプル
  GaoeAPI\WSHSampleの中にGaoeAPIをWindows Scripting Hostから利用するサンプルが
　GaoeAPI\VBSampleの中にGaoeAPIをVisualBasic(6)から利用するサンプルがあります。
　GaoeAPIをインストールしたうえでご覧になってください。

○メソッド

・GetVersion()
  　GaoEncodeのバージョンを取得します。
  　環境に最新版のGaoeAPIがインストールされたかチェックするために、
  　お使いください。（現在のバージョンは2.3.2.1)

　戻り値：
        バージョンが文字列(X.X.X.X）の形式で返ります。

・DecodeFile(SrcFile, pass, passmode, OutFolder）
　　ファイルを復号します。

  引数：
  　SrcFile     - 復号するファイルのフルパス
  　pass        - 解除キー（passmodeによって指定するものが異なる）
  　passmode    - 解除キーの種類
                0 - 文字列  　passは解除キーとなる文字列を指定
                1 - ファイル  passは解除キーとなるファイルのフルパスを指定

                暗号化ファイルが公開鍵で暗号化されたものであった場合、
                引数passとpassmodeは無視されます。
                この時はGaoEncode.exeはPrivateKeysフォルダの中から
                適切なPrivatekey（秘密鍵）を自動選択して復号を試みます。

　　OutFolder   - 復号されたファイルの保存先となるフォルダ
　　　　　　　　　　存在しないフォルダはDecode前に作成されます

　戻り値：
　　成功すると1が返ります。中断/失敗すると0が返ります。
　　解除キーの総当たり攻撃を防ぐために、正しくない解除キーでDecodeを行うと
　  この関数は一定時間制御を返しません。

・EncodeFile(pass,passmode,OutFolder,OutName)
　ファイルを暗号化します。
　暗号化するファイルはこのメソッドを呼び出す前にAddTargetで登録しておきます。
　暗号化のオプションもこのメソッドを呼び出す前に設定しておきます。

　引数：
　　pass        - 解除キー（passmodeによって指定するものが異なる）
　　passmode    - 解除キーの種類
                0 - 文字列  　passは解除キーとなる文字列を指定
                1 - ファイル  passは解除キーとなるファイルのフルパスを指定
                2 - 公開鍵    passは使用する公開鍵を"|"で区切って指定
                　　　　　　　公開鍵は「\PublicKeys」の中にあるものを指定
                　　　　　　　拡張子.txtは付けない

                              ex) bosuke|member\taro|member\hanako|
                                  （注：最後にも"|"を付ける）

　　OutFolder   - 暗号化されたファイルの保存先となるフォルダ
　　　　　　　　　　存在しないフォルダはDecode前に作成されます

        OutName - 暗号化されたファイルの保存名を指定
                  拡張子はDisguise（偽装）プロパティで決定されます。
                  よって、OutNameには拡張子を除いたファイル名を指定します。
                  OutNameに空文字列を渡すと、ファイル名がランダムになります。

　戻り値：
　　成功すると1が返ります。中断/失敗すると0が返ります。

・AddTarget(Target)
　暗号化する対象となるファイル/フォルダを暗号化対象リストに追加します。
　EncodeFileを呼び出す前に、これで暗号化対象リストに暗号化するファイルを
　追加しておいてください。

　引数：
　　Target  - 暗号化の対象となるファイル/フォルダを指定
              フォルダを指定した場合、そのフォルダ内の全ファイル
             （サブディレクトリ含む）が暗号化対象に加わります。

　戻り値：
　　暗号化対象リストに登録されているファイル数が返ります。

・ClearTarget()
  暗号化対象リストをクリアします。

　戻り値：
　　ありません。

・EncodeStr(SrcStr,pass,passmode)
　SrcStrで指定された文字列を暗号化して、暗号化された文字列を返します。

　引数：
　　SrcStr  - 暗号化の対象となる文字列
　　pass    - EncodeFileと同様
　　passmode- EncodeFileと同様

　戻り値：
　　暗号化された文字列（失敗した場合""が返される）

・DecodeStr(SrcStr,pass,passmode)
　SrcStrで指定された文字列を復号して、復号された文字列を返します。

　引数：
　　SrcStr   - 復号の対象となる文字列
　　pass     - DecodeFileと同様
　　passmode - DeocdeFileと同様

　戻り値：
　　復号された文字列（失敗した場合""が返される）

・SetClipStr(Str)
　クリップボードに文字列をセットする

　引数：
　　Str   - セットする文字列

　戻り値；
　　ありません。

・GetClipStr
　クリップボードにセットされている文字列を取得する、

　引数；
　　ありません。

　戻り値：
　　クリップボードから取得した文字列

○プロパティ

・Algorithm
　暗号化に使用するアルゴリズム
　　0 - CAST-128  1 - Blowfish  2 - TripleDES
　　3 - 暗号化しない 4 - 自己復号(CAST-128)

・DivideHi / DivideLo
  KB単位の分割サイズ
  Hiが分割最大サイズ。Loが分割最小サイズです。
  分割サイズは200以上の値を指定してください。
  DivideHiを0に指定すると分割しません。
  分割サイズを固定したいときはHiとLoに同じ値を設定してください。

・Compression
　圧縮の種類
　　0 - なし  1 - deflate（高圧縮モード） 2 - CAB
　注）RAR/GCAは選択できません。

・Disguise
　偽装（拡張子）
        0 - なし   (.gao)  1 - 内蔵bmp(.bmp)  2 - 内蔵exe(.exe)
        3 - 内蔵jpg(.jpg)  4 - 内蔵lzh(.lzh)  5 - 内蔵mid(.mid)
        6 - 内蔵wav(.wav)
        7 - 外部ファイル
        　　　DisguiseExに指定されたファイルを使用（拡張子はそのファイルに従う）
        8 - 外部フォルダ
                　DisguiseExに指定されたフォルダのなかのファイルをランダム使用
                　（拡張子はランダムに選ばれたファイルに従う）

・DisguiseEx
  偽装に使うファイル/フォルダ
  Disguiseに 7 or 8 を選択しているときのみ有効

・CryptoList
　情報隠蔽（暗号元ファイル情報リストの暗号化）
　　0 - 情報隠蔽しない  1 - 情報隠蔽する


